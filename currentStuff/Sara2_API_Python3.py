# create the class for holding all the data associated with each design. 
# use namedtuple for memory for for what is parsed from spreedsheets and 
# fold data generated by nupack as should not change
from decimal import Decimal
from tokenize import Double
from turtle import st
from typing import Dict, NamedTuple, List
from unicodedata import decimal

#this is the stuff that is generated by Rhijus wet lab
class WetlabData(NamedTuple):
    eternaScore: float
    baselineSubscore: float
    foldingSubscore: float
    switchSubscore:float
    clusterNum: int
    foldChange: float
    foldChangeErrFactor: float
    KDOFF: float
    KDON: float
    ddG: float
    ddG_err: float

#data commonly associated with secondary structures. written with alternate structures in mind
class structureData(NamedTuple):
    secondaryStructure: str
    freeEnergy: float
    deltaMfeEnergy: float  

#this is the data the generated by folding software and in this case it is nupack
class NupackFoldData(NamedTuple):
    name: list
    mfeStructure: str
    mfeEnergy: float
    alternateStructureList: List[structureData]
    pairprobsList: List[List[float]]
    #primaryPairsList:list
    #primaryPairsSortedList: list
    #secondaryPairsList: list
    #secondaryPairsSortedList: list

#entry point for each design in a puzzle/lab
class DesignData(NamedTuple):
    sequence: str
    sequenceLength: int
    designID: int
    designName: str
    playerName: str
    wetlabResults: WetlabData
    nupackFoldResults: NupackFoldData

#entry point to puzzle or lab as we call them
class puzzleData(NamedTuple):
    puzzleName: str
    designIdDict: dict[str, DesignData]


class RoundData(NamedTuple):
    roundName: str
    puzzleNameDict: dict[str, puzzleData]

       


